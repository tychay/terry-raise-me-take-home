Raise.Me task:
	- hit API @done(2017-04-24)
		http://raise-me-take-home.raise.me
	- hit API for student @done(2017-04-24)
		http://raise-me-take-home.raise.me/5512d83af233c5839c000005.json
	- get Git instance running @done(2017-04-24)
		- start Tower @done(2017-04-24)
		- start a Github repo @done(2017-04-24)
		- clone @done(2017-04-24)
	write scraper in PHP:
		- write simple PHP script to read data from a URL @done(2017-04-24)
		- hit the main endpoint @done(2017-04-24)
		- build something that iterates over students (in return) @done(2017-04-24)
		- build something that hits the API for students @done(2017-04-24)
		- build something that dynamically builds a structure of student and courses @done(2017-04-24)
			STUDENT FIELDS
			(
				[0] => americanCitizen
				[1] => firstName
				[2] => graduationYear
				[3] => lastName
				[4] => zipcode
				[5] => email
				[6] => gender
				[7] => firstGenerationCollegeStudent
				[8] => createdAt
			)
			COURSE FIELDS
			(
				[0] => name
				[1] => grade
				[2] => schoolYear
				[3] => teacher
				[4] => gradeValue
				[5] => subject
			)
		- pre-compute GPA @done(2017-04-24)
			(probably do that during storage phase)
			(alternate is: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-avg-aggregation.html)
		- load elasticsearch
		- remove break/die
	Elasticsearch:
		- Get Elasticsearch up and running @done(2017-04-24)
			- download and install @done(2017-04-24)
				https://www.elastic.co/downloads/elasticsearch
				Elasticsearch requires at least Java 8 but your Java version from /usr/bin/java does not meet this requirement
				- install Java @done(2017-04-24)
					http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html
			http://localhost:9200/
		- basic tutorial
			http://joelabrahamsson.com/elasticsearch-101/
			- install chrome sense plugin @done(2017-04-24)
				https://chrome.google.com/webstore/detail/sense-beta/lhjgkmllcaadmopgmanpapmpjgmfcfig/related?hl=en
			- searching @done(2017-04-23)
			- filtering @done(2017-04-23)
				http://stackoverflow.com/questions/40519806/no-query-registered-for-filtered
				{
					"query": {
						"bool": {
							"must": {
								"query_string": {
									"query": "drama"
								}
							},
							"filter": {
								"term": { "year": 1962 }
							}
						}
					}
				}
				https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-constant-score-query.html
			- mapping
				http://stackoverflow.com/questions/40301061/elasticsearch-5-mapperparserexception-with-multi-field
		- alternate tutorial
				https://www.elastic.co/guide/en/elasticsearch/guide/current/intro.html
	Tasks to see if it can do:
		- can I dump/read @done(2017-04-24)
			GET /raiseme/student/_search
			{
				"query": {
					"match_all": {}
				}
			}
		- handle case of nested object (courses) @done(2017-04-24)
			https://www.elastic.co/guide/en/elasticsearch/guide/current/nested-mapping.html
			PUT /raiseme
			{
				"mappings": {
					"student": {
						"properties": {
							"courses": {
								"type": "nested", 
								"properties": {
									"name":       { "type": "string"  },
									"grade":      { "type": "string"  },
									"schoolYear": { "type": "string"   },
									"teacher":    { "type": "string"   },
									"gradeValue": { "type": "float"    },
									"subject":    { "type": "string"  }
								}
							}
						}
					}
				}
			}
			INDEX ALREADY EXISTS
			DELETE /raiseme/student/54e293e7188324f1b800005d
			DELETE /raiseme
		- query GPA
			https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-range-query.html
			GET /raiseme/student/_search
			{
				"query": {
					"range" : {
						"GPA" : {
							"gte" : 2,
							"lte" : 3,
							"boost" : 2.0
						}
					}
				}
			}
		- student took a course
			https://www.elastic.co/guide/en/elasticsearch/guide/current/nested-objects.html
			GET /raiseme/student/_search
			{
				"query": {
					"bool": {
						"must": [
							{
								"nested": {
									"path": "courses", 
									"query": {
										"bool": {
											"must": [ 
												{
													"match": {
														"courses.name": "Geometry"
													}
												}
											]
										}
									}
								}
							}
						]
			}}}
		- student took x courses in a subject @done(2017-04-24)
			https://www.elastic.co/guide/en/elasticsearch/guide/current/_analytics.html
			use aggregator to count courses in subject and then filter by that using BOOL
		- other data fields @done(2017-04-24)
			GET /raiseme/student/_search
			{
				"query" : {
					"bool" : {
						"must" : {
							"match" : {
								"americanCitizen" : true
							}
						}
					}
				}
			}
		- student ids to predictive score? @done(2017-04-24)
			add to user data using PUT
		- what API endpoints would need to be created for search service @done(2017-04-24)
			elasticsearch is poor at security and query language is non-intuitive to non-programmers. If it's end user, put a web end
			Otherwise it can be done as is, or a passthru API which can filter simple things (for instance, the index name or fields that might be locked out). Depends on buisness req
	
Discussion:
	Solution classes:
		Built In:
			+: no extra infrastructure, easy
			-: might not support, may need offline for processing, no fulltext search (probably), slow for longer queries
		Search Engine:
			+:  get text search for free, highly performant
			-: only the engine (still need to deal with loading/streaming data), analytics work is poor
		Analytics platform (Hadoop or commercial OLAP):
			+:  great analytics
			-: complex to set up (many different interfaces, ways to load, etc), overkill, multiple interfaces
	ElasticSearch vs. :
		Solr:
			http://solr-vs-elasticsearch.com
		Hadoop:
			- consequences of hadoop v. ElasticSearch
				https://blog.treasuredata.com/blog/2015/08/31/hadoop-vs-elasticsearch-for-advanced-analytics/
				https://www.quora.com/Why-do-people-use-Hadoop-or-Spark-when-there-is-ElasticSearch
			
	Cloud services:
		
		AWS:
			- research CloudSearch (AWS)
				http://cloudacademy.com/blog/elasticsearch-vs-cloudsearch/
			- research ElasticSeqach
			- research AWS Hadoop
	Considerations:
		ELK?:
			- ELK?
		- how to stream data in
		- scalability?